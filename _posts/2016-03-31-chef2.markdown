---
layout: post
title:  "chef  tutorial p2."
date:   2016-03-31 11:12:00 +0100
categories: chef
---

While previous part was mosnly about recipes and basics, this goes to the next level.
Creating virtual machines using chef-provisioning and provisioning them with our chef recipes.

also here some intro to chef provisioning [vagrant provs](https://gist.github.com/dergachev/3866825)

Main idea is hold all the basics in one place, without googling over and over again.

Pull requests are welcome, this [post is hosted here](https://github.com/mungobungo/mungobungo.github.io)

So plan is basically following:

* [Preparation](#preparation)
  * [Create cookbook?](#create_cookbook)
  * [How to use attribute inside recipe?](#use_attribute)

## <a name="preparation"> </a> Preparation
# <a name="create_cookbook"> </a> Creation cookbook
Creating cookbook as usual

```shell
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks$ knife cookbook create chef_vagrant_provision -o .
WARNING: No knife configuration file found
** Creating cookbook chef_vagrant_provision in /home/vagrant/projects/big_chef/cookbooks
** Creating README for cookbook: chef_vagrant_provision
** Creating CHANGELOG for cookbook: chef_vagrant_provision
** Creating metadata for cookbook: chef_vagrant_provision
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks$ ls
bertut  cheftutorial  chef_vagrant_provision
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks$ cd chef_vagrant_provision/
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks/chef_vagrant_provision$ ls
attributes  CHANGELOG.md  definitions  files  libraries  metadata.rb  providers  README.md  recipes  resources  templates
```

# <a name="initiate_berks"> </a> Initialize berks
initializing berks

```shell
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks/chef_vagrant_provision$ berks init
      create  Berksfile
      create  Thorfile
      create  chefignore
      create  .gitignore
      create  Gemfile
      create  .kitchen.yml
    conflict  chefignore
Overwrite /home/vagrant/projects/big_chef/cookbooks/chef_vagrant_provision/chefignore? (enter "h" for help) [Ynaqdh] y
       force  chefignore
      append  Thorfile
      create  test/integration/default
      append  .gitignore
      append  .gitignore
      append  Gemfile
      append  Gemfile
You must run `bundle install' to fetch any new gems.
      create  Vagrantfile
Successfully initialized
```

# <a name="install_bundler"> </a> Fetching berks gems
fetching gems, so all can run smoothly

```shell
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks/chef_vagrant_provision$ bundle install
Fetching gem metadata from https://rubygems.org/........
Fetching version metadata from https://rubygems.org/...
Fetching dependency metadata from https://rubygems.org/..
Resolving dependencies...
Using addressable 2.4.0
......
  many more lines here
......
Using bundler 1.8.4
Bundle complete! 3 Gemfile dependencies, 47 gems now installed.
Use `bundle show [gemname]` to see where a bundled gem is installed.
```


# <a name="install_vagrant_berkshelf"> </a> Installing vagrant-berkshelf plugin
```
vagrant plugin install vagrant-berkshelf
Installing the 'vagrant-berkshelf' plugin. This can take a few minutes...
Installed the plugin 'vagrant-berkshelf (4.1.0)'!
Post install message from the 'vagrant-berkshelf' plugin:

The Vagrant Berkshelf plugin requires Berkshelf from the Chef Development Kit.
You can download the latest version of the Chef Development Kit from:

   https://downloads.chef.io/chef-dk/

Installing Berkshelf via other methods is not officially supported.

```

# <a name="install_chef_provisioning"> </a> Installing chef provisioning for vagrant
Preparing chef vagrant-provisioning  tools

```
gem install chef-provisioning chef-provisioning-vagrant
Fetching: chef-provisioning-1.6.0.gem (100%)
Successfully installed chef-provisioning-1.6.0
Parsing documentation for chef-provisioning-1.6.0
Installing ri documentation for chef-provisioning-1.6.0
Done installing documentation for chef-provisioning after 4 seconds
Successfully installed chef-provisioning-vagrant-0.11.0
Parsing documentation for chef-provisioning-vagrant-0.11.0
Done installing documentation for chef-provisioning-vagrant after 0 seconds
2 gems installed
```


Trying to run vagrant..

```
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks/chef_vagrant_provision$ vagrant
Failed to load the "vagrant-berkshelf" plugin. View logs for more details.

Vagrant failed to initialize at a very early stage:

This Vagrant environment has specified that it requires the Vagrant
version to satisfy the following version requirements:

  >= 1.5.0

You are running Vagrant 1.4.3, which does not satisify
these requirements. Please change your Vagrant version or update
the Vagrantfile to allow this Vagrant version. However, be warned
that if the Vagrantfile has specified another version, it probably has
good reason to do so, and changing that may cause the environment to
not function properly.
```

So, we need to update vagrant to specific version.
Easiest way to do so, go to [Vagrant site](https://www.vagrantup.com/downloads.html) and grab installation package.

```
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks/chef_vagrant_provision$ wget https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.deb
--2016-03-31 15:55:09--  https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.deb
Resolving releases.hashicorp.com (releases.hashicorp.com)... 23.235.43.69
Connecting to releases.hashicorp.com (releases.hashicorp.com)|23.235.43.69|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 75496368 (72M) [application/x-debian-package]
Saving to: ‘vagrant_1.8.1_x86_64.deb’

100%[=============================================================================================>] 75.496.368  3,91MB/s   in 22s    

2016-03-31 15:55:32 (3,27 MB/s) - ‘vagrant_1.8.1_x86_64.deb’ saved [75496368/75496368]
```

And now you can install it.

```
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks/chef_vagrant_provision$ sudo dpkg -i vagrant_1.8.1_x86_64.deb
(Reading database ... 430608 files and directories currently installed.)
Preparing to unpack vagrant_1.8.1_x86_64.deb ...
Unpacking vagrant (1:1.8.1) over (1.4.3-1) ...
Setting up vagrant (1:1.8.1) ...
Processing triggers for man-db (2.6.7.1-1ubuntu1) ...
```

Now vagrant works fine.

```
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks/chef_vagrant_provision$ vagrant version
Installed Version: 1.8.1
Latest Version: 1.8.1

You're running an up-to-date version of Vagrant!
```

Chef provisoning can be done with AWS, Docker, Azure, Vagrant, you name it.
The way you specify which one to use are environment variables.

```
export CHEF_DRIVER=vagrant
export VAGRANT_DEFAULT_PROVIDER=virtualbox
```

Now we need to add some box to play with

```
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks/chef_vagrant_provision$ vagrant box add hashicorp/precise64
==> box: Loading metadata for box 'hashicorp/precise64'
    box: URL: https://atlas.hashicorp.com/hashicorp/precise64
This box can work with multiple providers! The providers that it
can work with are listed below. Please review the list and choose
the provider you will be working with.

1) hyperv
2) virtualbox
3) vmware_fusion

Enter your choice: 2
==> box: Adding box 'hashicorp/precise64' (v1.1.0) for provider: virtualbox
    box: Downloading: https://atlas.hashicorp.com/hashicorp/boxes/precise64/versions/1.1.0/providers/virtualbox.box
==> box: Successfully added box 'hashicorp/precise64' (v1.1.0) for 'virtualbox'!
```


trying to run

```
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks/chef_vagrant_provision$ chef-client -z recipes/simple_machine.rb

....many lines here...


STDOUT:Bringing machine 'marley' up with 'virtualbox' provider...
==> marley: Checking if box 'hashicorp/precise64' is up to date...
==> marley: Clearing any previously set forwarded ports...
==> marley: Clearing any previously set network interfaces...
==> marley: Preparing network interfaces based on configuration...
    marley: Adapter 1: nat
==> marley: Forwarding ports...
    marley: 22 (guest) => 2222 (host) (adapter 1)
==> marley: Running 'pre-boot' VM customizations...
==> marley: Booting VM...
==> marley: Waiting for machine to boot. This may take a few minutes...

STDERR:The guest machine entered an invalid state while waiting for it
to boot. Valid states are 'starting, running'. The machine is in the
'poweroff' state. Please verify everything is configured
properly and try again.

```

hmm maybe we should run vagrant up to see what causes the problem

```
vagrant@vagrant-VirtualBox:~/projects/big_chef/cookbooks/chef_vagrant_provision$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Box 'chef/ubuntu-14.04' could not be found. Attempting to find and install...
    default: Box Provider: virtualbox
    default: Box Version: >= 0
==> default: Loading metadata for box 'chef/ubuntu-14.04'
    default: URL: https://atlas.hashicorp.com/chef/ubuntu-14.04
The box you're adding has a name different from the name you
requested. For boxes with metadata, you cannot override the name.
If you're adding a box using `vagrant box add`, don't specify
the `--name` parameter. If the box is being added via a Vagrantfile,
change the `config.vm.box` value to match the name below.

Requested name: chef/ubuntu-14.04
Actual name: bento/ubuntu-14.04

```
